@using eticket.ViewModels
@model IEnumerable<UsuarioDTO>

@{
    ViewData["Title"] = "Usuarios";
}

<div class="container py-2">
    <div class="row">
        <h1 class="h2">Usuarios</h1>
    </div>

    <div class="row">
        <section id="table-section" class="mt-4 border rounded bg-white shadow-sm p-3 col-12">
            <div class="userDatatable global-shadow border-light-0 w-100 adv-table">
                <div class="table-responsive">
                    <div class="adv-table-table__header">
                        <div class="adv-table-table__button mb-2 w-50 d-flex justify-content-start">
                            <button type="button" onclick="newUserClick()" class="btn px-15 btn-primary ml-auto">
                                <i class="las la-plus fs-16"></i>
                                <span>Agregar Usuario</span>
                            </button >
                        </div>
                        <div id="filter-form-container"></div>
                    </div>
                    <table class="table mb-0 table-borderless table-striped userDatatable"
                        data-sorting="true"
                        data-filtering="true"
                        data-filter-container="#filter-form-container"
                        data-paging-current="1"
                        data-paging-position="right"
                        data-paging-size="100"
                    >
                        <thead>
                            <tr class="userDatatable-header">
                                <th data-filterable="true">
                                    <span class="userDatatable-title">Usuario</span>
                                </th>
                                <th data-filterable="true">
                                    <span class="userDatatable-title">Nombre</span>
                                </th>
                                <th data-filterable="true">
                                    <span class="userDatatable-title">Correo</span>
                                </th>
                                <th data-filterable="true">
                                    <span class="userDatatable-title">Rol</span>
                                </th>
                                <th data-filterable="false">
                                    <span class="userDatatable-title">Ultimo Acceso</span>
                                </th>
                                <th data-type="html" data-filterable="true">
                                    <span class="userDatatable-title">Estado</span>
                                </th>
                                <th data-filterable="false" data-breakpoints="sm">
                                    <span class="userDatatable-title float-center">Acciones</span>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var usu in Model)
                            {
                                @await Html.PartialAsync("./Partials/UsuarioDataRow.cshtml", usu);
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </section>
    </div>
</div>


<!-- Modal Nuevo Usuario-->
<div class="modal fade nuevo-usuario-modal"
    id="nuevo-usuario-modal"
    role="dialog"
    tabindex="-1"
    aria-labelledby="staticBackdropLabel"
    aria-hidden="true"
    data-bs-backdrop="static"
    data-bs-keyboard="false"
>
    <div class="modal-dialog modal-md modal-dialog-centered">
        <div class="modal-content radius-xl">
            <div class="modal-header">
                <h5 class="modal-title fw-500" id="staticBackdropLabel">Agregar Usuario</h5>
                <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
                    <img src="~/img/svg/x.svg" alt="x" class="svg">
                </button>
            </div>
            <div class="modal-body" id="body-modal">
                @await Html.PartialAsync("~/Views/Shared/_LoadingSpinner.cshtml", "")
            </div>
        </div>
    </div>
</div>
<!-- Modal -->


<style>
    .form-group.footable-filtering-search
    {
        margin: 0px 0px 5px 0px !important;
    }
</style>

@section scripts
{
    <script>
        let modal = undefined;

        function newUserClick()
        {
            const url = '/users/partial/nuevo-usuario';
            $("#body-modal").load(url, null, function(resp, status, request) {
                modal.show();
            });
        }

        function submitNuevoUsuario(event)
        {
            event.preventDefault();
            
            const submitButton = document.getElementById('submit-button');
            const icon = submitButton.querySelector('.upload-icon');
            const spinner = submitButton.querySelector('.upload-spinner');

            // Toggle to spinner
            submitButton.disabled = true;
            icon.classList.add('d-none');
            spinner.classList.remove('d-none');

            // clear errors messags
            $("span.text-danger").text("");

            // send the data
            const url = "/users";
            const method = 'POST';
            const form = $(event.target);

            $.ajax({
                url: url,
                type: method,
                data: form.serialize(),
                success: function(response) {
                    modal.hide();
                    
                    var {folio} = response;
                    Swal.fire({
                        title: "Usuario almacenado",
                        icon: "success",
                        confirmButtonText: 'Aceptar'
                    }).then((result) => {
                        // TODO: Reload the table
                        window.location.reload();
                    });
                },
                error: function(xhr, status, error) {
                    console.error(xhr, error);
                    if(xhr.status == 422)
                    {
                        const {errors} = xhr.responseJSON;
                        errors.forEach(err => {
                            const errorSpan = $(`span[data-valmsg-for="${err.field}"]`);
                            errorSpan.text(err.message);
                        });
                    }
                    else
                    {
                        let titleMessage = "Error no controlado al registrar el usuario.";
                        if(xhr.responseJSON)
                        {
                            const { title } = xhr.responseJSON;
                            if(title)
                            {
                                titleMessage = title;
                            }

                        }
                        Swal.fire({
                            title: titleMessage,
                            icon: "error"
                        });
                    }
                },
                complete: function()
                {
                    submitButton.disabled = false;
                    icon.classList.remove('d-none');
                    spinner.classList.add('d-none');
                }
            });
        }

        $(function() {
            $('.userDatatable').footable();

            // * init the modal
            if (document.getElementsByClassName("nuevo-usuario-modal").length)
            {
                modal = new bootstrap.Modal(document.getElementById("nuevo-usuario-modal"));
            }
        });
    </script>
}